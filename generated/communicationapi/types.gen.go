// Package communicationapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.12.4 DO NOT EDIT.
package communicationapi

const (
	BearerScopes = "Bearer.Scopes"
)

// Comment defines model for Comment.
type Comment struct {
	Body      string `json:"body"`
	CreatedAt int    `json:"created_at"`
	Id        Uuid   `json:"id"`
}

// Comments defines model for Comments.
type Comments struct {
	Comments []Comment `json:"comments"`
}

// CreateFeedbackCommentParam defines model for CreateFeedbackCommentParam.
type CreateFeedbackCommentParam struct {
	Body string `json:"body"`
}

// CreateFeedbackParam defines model for CreateFeedbackParam.
type CreateFeedbackParam struct {
	FeedbackDescription string `json:"feedback_description"`
	FeedbackTitle       string `json:"feedback_title"`
	UserId              Uuid   `json:"user_id"`
}

// CreateVoteUserParam defines model for CreateVoteUserParam.
type CreateVoteUserParam struct {
	UserId Uuid `json:"user_id"`
}

// Error defines model for Error.
type Error struct {
	// Message Error message
	Message string `json:"message"`

	// Type permission_denied
	Type string `json:"type"`
}

// Feedback defines model for Feedback.
type Feedback struct {
	Comments            []Comment `json:"comments"`
	Count               uint64    `json:"count"`
	CreatedAt           int       `json:"created_at"`
	FeedbackDescription string    `json:"feedback_description"`
	FeedbackTitle       string    `json:"feedback_title"`
	Id                  Uuid      `json:"id"`
	Status              Status    `json:"status"`
	UserId              Uuid      `json:"user_id"`
	Users               []User    `json:"users"`
}

// FeedbackSaveProps defines model for FeedbackSaveProps.
type FeedbackSaveProps struct {
	FeedbackDescription string `json:"feedback_description"`
	FeedbackTitle       string `json:"feedback_title"`
}

// Feedbacks defines model for Feedbacks.
type Feedbacks struct {
	Feedbacks []Feedback `json:"feedbacks"`
}

// Status defines model for Status.
type Status = uint64

// UpdateFeedbackCommentParam defines model for UpdateFeedbackCommentParam.
type UpdateFeedbackCommentParam struct {
	Body string `json:"body"`
}

// UpdateFeedbackParam defines model for UpdateFeedbackParam.
type UpdateFeedbackParam = FeedbackSaveProps

// UpdateFeedbackStatusParam defines model for UpdateFeedbackStatusParam.
type UpdateFeedbackStatusParam struct {
	Status Status `json:"status"`
}

// User defines model for User.
type User struct {
	UserId Uuid `json:"user_id"`
}

// Users defines model for Users.
type Users struct {
	Users []User `json:"users"`
}

// Uuid defines model for Uuid.
type Uuid = string

// Votes defines model for Votes.
type Votes struct {
	Count uint64 `json:"count"`
	Users []User `json:"users"`
}

// CommentId defines model for CommentId.
type CommentId = Uuid

// FeedbackId defines model for FeedbackId.
type FeedbackId = Uuid

// UserId defines model for UserId.
type UserId = Uuid

// CreateFeedbackJSONRequestBody defines body for CreateFeedback for application/json ContentType.
type CreateFeedbackJSONRequestBody = CreateFeedbackParam

// UpdateFeedbackJSONRequestBody defines body for UpdateFeedback for application/json ContentType.
type UpdateFeedbackJSONRequestBody = UpdateFeedbackParam

// CreateFeedbackCommentJSONRequestBody defines body for CreateFeedbackComment for application/json ContentType.
type CreateFeedbackCommentJSONRequestBody = CreateFeedbackCommentParam

// UpdateFeedbackCommentJSONRequestBody defines body for UpdateFeedbackComment for application/json ContentType.
type UpdateFeedbackCommentJSONRequestBody = UpdateFeedbackCommentParam

// UpdateFeedbackStatusJSONRequestBody defines body for UpdateFeedbackStatus for application/json ContentType.
type UpdateFeedbackStatusJSONRequestBody = UpdateFeedbackStatusParam

// CreateVoteUserJSONRequestBody defines body for CreateVoteUser for application/json ContentType.
type CreateVoteUserJSONRequestBody = CreateVoteUserParam
