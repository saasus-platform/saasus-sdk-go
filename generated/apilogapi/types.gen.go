// Package apilogapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.12.4 DO NOT EDIT.
package apilogapi

import (
	"time"

	openapi_types "github.com/deepmap/oapi-codegen/pkg/types"
)

const (
	BearerScopes = "Bearer.Scopes"
)

// ApiLog defines model for ApiLog.
type ApiLog struct {
	// ApiKey API Key
	ApiKey   string `json:"api_key"`
	ApiLogId Uuid   `json:"api_log_id"`

	// CreatedAt Epoch second of API log registration timestamp
	CreatedAt int64 `json:"created_at"`

	// CreatedDate API log registration date
	CreatedDate string `json:"created_date"`

	// Referer The referrer of the request
	Referer string `json:"referer"`

	// RemoteAddress Client IP Address
	RemoteAddress string `json:"remote_address"`

	// RequestBody The body of the request
	RequestBody string `json:"request_body"`

	// RequestMethod Request method
	RequestMethod string `json:"request_method"`

	// RequestUri Request URI
	RequestUri string `json:"request_uri"`

	// ResponseBody The body of the response
	ResponseBody string `json:"response_body"`

	// ResponseStatus Response status
	ResponseStatus string `json:"response_status"`
	SaasId         Uuid   `json:"saas_id"`

	// TraceId Trace ID
	TraceId string `json:"trace_id"`

	// Ttl Epoch second of planned API log deletion
	Ttl int64 `json:"ttl"`
}

// ApiLogs defines model for ApiLogs.
type ApiLogs struct {
	ApiLogs []ApiLog `json:"api_logs"`

	// Cursor Cursor for cursor pagination
	Cursor *string `json:"cursor,omitempty"`
}

// Error defines model for Error.
type Error struct {
	// Message Error message
	Message string `json:"message"`

	// Type permission_denied
	Type string `json:"type"`
}

// Uuid defines model for Uuid.
type Uuid = string

// ApiLogId defines model for ApiLogId.
type ApiLogId = Uuid

// GetLogsParams defines parameters for GetLogs.
type GetLogsParams struct {
	// CreatedDate The date, in format of YYYY-MM-DD, to retrieve the log.
	CreatedDate *openapi_types.Date `form:"created_date,omitempty" json:"created_date,omitempty"`

	// CreatedAt The datetime, in ISO 8601 format, to retrieve the log.
	CreatedAt *time.Time `form:"created_at,omitempty" json:"created_at,omitempty"`

	// Limit Maximum number of logs to retrieve.
	Limit *int64 `form:"limit,omitempty" json:"limit,omitempty"`

	// Cursor Cursor for cursor pagination.
	Cursor *string `form:"cursor,omitempty" json:"cursor,omitempty"`
}
